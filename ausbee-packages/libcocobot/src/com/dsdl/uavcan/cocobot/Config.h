/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /home/damien/prog/ausbee-packages/libcocobot/dsdl/uavcan/cocobot/207.Config.uavcan
 */

#ifndef __UAVCAN_COCOBOT_CONFIG
#define __UAVCAN_COCOBOT_CONFIG

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
---

uint8 config
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.cocobot.Config
---
saturated uint8 config
******************************************************************************/

#define UAVCAN_COCOBOT_CONFIG_ID                           207
#define UAVCAN_COCOBOT_CONFIG_NAME                         "uavcan.cocobot.Config"
#define UAVCAN_COCOBOT_CONFIG_SIGNATURE                    (0x366915E38F78CD13ULL)

#define UAVCAN_COCOBOT_CONFIG_REQUEST_MAX_SIZE             ((0 + 7)/8)

typedef struct
{
    uint8_t empty;
} uavcan_cocobot_ConfigRequest;

extern
uint32_t uavcan_cocobot_ConfigRequest_encode(uavcan_cocobot_ConfigRequest* source, void* msg_buf);

extern
int32_t uavcan_cocobot_ConfigRequest_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_cocobot_ConfigRequest* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_cocobot_ConfigRequest_encode_internal(uavcan_cocobot_ConfigRequest* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_cocobot_ConfigRequest_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_cocobot_ConfigRequest* dest, uint8_t** dyn_arr_buf, int32_t offset);

#define UAVCAN_COCOBOT_CONFIG_RESPONSE_MAX_SIZE            ((8 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    uint8_t    config;                        // bit len 8

} uavcan_cocobot_ConfigResponse;

extern
uint32_t uavcan_cocobot_ConfigResponse_encode(uavcan_cocobot_ConfigResponse* source, void* msg_buf);

extern
int32_t uavcan_cocobot_ConfigResponse_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_cocobot_ConfigResponse* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_cocobot_ConfigResponse_encode_internal(uavcan_cocobot_ConfigResponse* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_cocobot_ConfigResponse_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_cocobot_ConfigResponse* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_COCOBOT_CONFIG