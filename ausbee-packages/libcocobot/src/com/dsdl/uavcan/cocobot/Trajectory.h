/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /home/damien/prog/ausbee-packages/libcocobot/dsdl/uavcan/cocobot/20002.Trajectory.uavcan
 */

#ifndef __UAVCAN_COCOBOT_TRAJECTORY
#define __UAVCAN_COCOBOT_TRAJECTORY

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

#include <uavcan/cocobot/TrajectoryOrder.h>

/******************************* Source text **********************************
TrajectoryOrder[<=31] orders
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.cocobot.Trajectory
uavcan.cocobot.TrajectoryOrder[<=31] orders
******************************************************************************/

#define UAVCAN_COCOBOT_TRAJECTORY_ID                       20002
#define UAVCAN_COCOBOT_TRAJECTORY_NAME                     "uavcan.cocobot.Trajectory"
#define UAVCAN_COCOBOT_TRAJECTORY_SIGNATURE                (0xDCEAE0F503FF18BBULL)

#define UAVCAN_COCOBOT_TRAJECTORY_MAX_SIZE                 ((11041 + 7)/8)

// Constants

#define UAVCAN_COCOBOT_TRAJECTORY_ORDERS_MAX_LENGTH                                      31

typedef struct
{
    // FieldTypes
    struct
    {
        uint8_t    len;                       // Dynamic array length
        uavcan_cocobot_TrajectoryOrder* data;                      // Dynamic Array 356bit[31] max items
    } orders;

} uavcan_cocobot_Trajectory;

extern
uint32_t uavcan_cocobot_Trajectory_encode(uavcan_cocobot_Trajectory* source, void* msg_buf);

extern
int32_t uavcan_cocobot_Trajectory_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_cocobot_Trajectory* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_cocobot_Trajectory_encode_internal(uavcan_cocobot_Trajectory* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_cocobot_Trajectory_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_cocobot_Trajectory* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_COCOBOT_TRAJECTORY